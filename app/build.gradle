plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'com.google.devtools.ksp' version '1.7.22-1.0.8'
    id 'com.google.dagger.hilt.android'
    id "com.google.protobuf" version "0.8.17"
}

kotlin {
    sourceSets {
        debug {
            kotlin.srcDir("build/generated/ksp/debug/kotlin")
        }
        release {
            kotlin.srcDir("build/generated/ksp/release/kotlin")
        }
    }
}

apply plugin: 'kotlin-kapt'

android {
    namespace 'com.example.testwinkotlin'
    compileSdk 33

    defaultConfig {
        applicationId "com.example.testwinkotlin"
        minSdk 26
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.3.2'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.activity:activity-compose:1.3.1'
    implementation "androidx.compose.ui:ui:$compose_ui_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_ui_version"
    implementation 'androidx.compose.material:material:1.1.1'
    implementation 'androidx.compose.material3:material3:1.0.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_ui_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_ui_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_ui_version"
    // View Model Compose
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:2.5.1"
    // Navigation Compose
    implementation("androidx.navigation:navigation-compose:2.5.3")
    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"
    implementation "com.squareup.okhttp3:okhttp:5.0.0-alpha.3"
    implementation "com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.3"
    // Dagger Hilt
    implementation 'com.google.dagger:hilt-android:2.44.2'
    implementation "androidx.hilt:hilt-navigation-compose:1.0.0"
    testImplementation 'com.google.dagger:hilt-android-testing:2.44.2'
    androidTestImplementation  'com.google.dagger:hilt-android-testing:2.44.2'
    kapt 'com.google.dagger:hilt-compiler:2.44.2'
    kaptTest 'com.google.dagger:hilt-compiler:2.44.2'
    kaptAndroidTest 'com.google.dagger:hilt-compiler:2.44.2'
    // Datastore
    implementation "androidx.datastore:datastore-preferences:1.0.0"
    implementation  "androidx.datastore:datastore-core:1.0.0"
    implementation  "com.google.protobuf:protobuf-javalite:3.18.0"
    // Biometric
    implementation "androidx.biometric:biometric-ktx:1.2.0-alpha05"
    // Push Notifications
    implementation ('com.inditex.messgand:messgand:4.0.0')
    implementation "com.inditex.lfwknets:lfwknets:2.0.1"

    implementation "androidx.constraintlayout:constraintlayout-compose:1.0.1"

}

kapt {
    correctErrorTypes true
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.14.0"
    }

    // Generates the java Protobuf-lite code for the Protobufs in this project. See
    // https://github.com/google/protobuf-gradle-plugin#customizing-protobuf-compilation
    // for more information.
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}

